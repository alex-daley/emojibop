{"version":3,"sources":["components/Header.jsx","components/EmojiPopoverTable.jsx","components/EmojiPopover.jsx","components/EmojiAccordion.jsx","components/App.jsx","index.js"],"names":["Header","Typography","role","variant","EmojiPopoverTable","emoji","TableContainer","Table","size","TableBody","TableRow","TableCell","glyph","name","group","subGroup","anchorOrigin","vertical","horizontal","transformOrigin","EmojiPopver","onClose","anchorEl","open","Boolean","Popover","EmojiGlyph","onClick","e","style","display","width","cursor","EmojiAccordion","title","emojis","React","useState","setAnchorEl","setEmoji","Accordion","AccordionSummary","expandIcon","AccordionDetails","map","i","currentTarget","EmojiPopover","useStyles","makeStyles","theme","accordionContainer","marginTop","spacing","header","marginBottom","App","classes","emojiGroups","groups","groupBy","Object","entries","groupEmojis","Container","maxWidth","Grid","container","className","startCase","replace","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.16aecd02.chunk.js","sourcesContent":["import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nfunction Header() {\r\n  return (\r\n    <Typography role='h1' variant='h2'>\r\n      Emojibop ðŸ˜Ž\r\n    </Typography>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableRow from '@material-ui/core/TableRow'\r\n\r\nfunction EmojiPopoverTable({ emoji }) {\r\n  if (!emoji) {\r\n    return <></>\r\n  }\r\n\r\n  return (\r\n    <TableContainer>\r\n      <Table size=\"small\">\r\n        <TableBody>\r\n          <TableRow>\r\n            <TableCell>{'Glyph:'}</TableCell>\r\n            <TableCell><bold>{emoji.glyph}</bold></TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell>{'Name:'}</TableCell>\r\n            <TableCell>{emoji.name}</TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell>{'Group:'}</TableCell>\r\n            <TableCell>{emoji.group}</TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell>{'Subgroup:'}</TableCell>\r\n            <TableCell>{emoji.subGroup}</TableCell>\r\n          </TableRow>\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n\r\nexport default EmojiPopoverTable;\r\n","import React from 'react';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport EmojiPopverTable from './EmojiPopoverTable';\r\n\r\nconst anchorOrigin = { vertical: 'bottom', horizontal: 'right' };\r\nconst transformOrigin = { vertical: 'top', horizontal: 'left' };\r\n\r\nfunction EmojiPopver({ onClose, anchorEl, emoji }) {\r\n  const open = Boolean(anchorEl && emoji);\r\n\r\n  return (\r\n    <Popover\r\n      open={open}\r\n      onClose={() => onClose?.()}\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={anchorOrigin}\r\n      transformOrigin={transformOrigin}\r\n    >\r\n      <EmojiPopverTable emoji={emoji} />\r\n    </Popover>\r\n  );\r\n}\r\n\r\nexport default EmojiPopver;\r\n","import React from 'react';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport EmojiPopover from './EmojiPopover';\r\n\r\nfunction EmojiGlyph({ emoji, onClick }) {\r\n  const style = {\r\n    display: 'inline-block',\r\n    width: '32px',\r\n    cursor: 'pointer'\r\n  };\r\n\r\n  return (\r\n    <span onClick={e => onClick?.(e)} style={style}>\r\n      {emoji.glyph}\r\n    </span>\r\n  );\r\n}\r\n\r\nfunction EmojiAccordion({ title, emojis }) {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [emoji, setEmoji] = React.useState(null);\r\n\r\n  return (\r\n    <Accordion>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>\r\n          {title}\r\n        </Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Typography variant='h5'>\r\n          {emojis.map((emoji, i) => {\r\n            return (\r\n              <EmojiGlyph\r\n                key={i}\r\n                emoji={emoji}\r\n                onClick={e => {\r\n                  setAnchorEl(e.currentTarget);\r\n                  setEmoji(emoji);\r\n                }}\r\n              />\r\n            )\r\n          })}\r\n        </Typography>\r\n        <EmojiPopover\r\n          anchorEl={anchorEl}\r\n          emoji={emoji}\r\n          onClose={() => {\r\n            setAnchorEl(null);\r\n            setEmoji(null);\r\n          }}\r\n        />\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  )\r\n}\r\n\r\nexport default EmojiAccordion;\r\n","import React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport groupBy from 'lodash/groupBy';\r\nimport startCase from 'lodash/startCase';\r\nimport Header from './Header';\r\nimport EmojiAccordion from './EmojiAccordion';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  accordionContainer: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(4)\r\n  },\r\n  header: {\r\n    marginBottom: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nfunction groupEmojis(emojis) {\r\n  const groups = groupBy(emojis, emoji => emoji.group);\r\n  return Object.entries(groups);\r\n}\r\n\r\nfunction titleCase(title) {\r\n  // HACK: .replace for 'and' correction...\r\n  return startCase(title).replace('And', 'and');\r\n}\r\n\r\nfunction App({ emojis }) {\r\n  const classes = useStyles();\r\n  const emojiGroups = groupEmojis(emojis);\r\n\r\n  return (\r\n    <Container maxWidth=\"xs\">\r\n      <Grid container spacing={2}>\r\n        <div className={classes.accordionContainer}>\r\n          <div className={classes.header}>\r\n            <Header/>\r\n          </div>\r\n          {emojiGroups.map(([name, emojis], i) => {\r\n            return (\r\n              <EmojiAccordion\r\n                key={i}\r\n                title={titleCase(name)}\r\n                emojis={emojis}\r\n              />\r\n            )\r\n          })}\r\n        </div>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport emojis from './emojis';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App emojis={emojis}/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}