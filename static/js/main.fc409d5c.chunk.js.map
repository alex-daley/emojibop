{"version":3,"sources":["components/Header.jsx","components/Footer.jsx","components/EmojiPopoverTable.jsx","components/EmojiPopover.jsx","components/EmojiAccordion.jsx","components/App.jsx","index.js"],"names":["Header","emojiGlyph","Typography","role","variant","useStyles","makeStyles","theme","buttonStyle","marginTop","spacing","Footer","classes","Link","href","Button","className","startIcon","EmojiPopoverTable","emoji","TableContainer","Table","size","TableBody","TableRow","TableCell","glyph","name","group","subGroup","anchorOrigin","vertical","horizontal","transformOrigin","EmojiPopver","onClose","anchorEl","open","Boolean","Popover","EmojiGlyph","selected","onClick","style","display","width","cursor","background","e","EmojiAccordion","title","emojis","expanded","onChange","onEmojiClick","React","useState","setAnchorEl","selectedEmoji","setEmoji","Accordion","AccordionSummary","expandIcon","AccordionDetails","map","i","currentTarget","EmojiPopover","accordionContainer","header","marginBottom","footer","App","setExpanded","emojiGroups","groups","groupBy","Object","entries","groupEmojis","Container","maxWidth","Grid","container","index","startCase","replace","handleAccordionChange","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fc409d5c.chunk.js","sourcesContent":["import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nfunction Header({ emojiGlyph }) {\r\n  return (\r\n    <Typography role='h1' variant='h2'>\r\n     { `Emojibop ${emojiGlyph ?? 'ðŸ˜Ž'}` }\r\n    </Typography>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\nimport Button from '@material-ui/core/Button';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  buttonStyle: {\r\n    marginTop: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nfunction Footer() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant='body2'>\r\n        Emojibop was created by Alex Daley as hobby project to showcase emojis founds\r\n        in the Unicode 12.0 specification.\r\n      </Typography>\r\n      \r\n      <Link href='https://home.unicode.org/'>\r\n        <Typography variant='body2'>\r\n          Click here to find out more about Unicode.\r\n        </Typography>\r\n      </Link>\r\n\r\n      <Button\r\n        className={classes.buttonStyle}\r\n        variant=\"outlined\"\r\n        startIcon={<GitHubIcon />}\r\n      >\r\n        View Source\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nfunction EmojiPopoverTable({ emoji }) {\r\n  if (!emoji) {\r\n    return <></>\r\n  }\r\n\r\n  return (\r\n    <TableContainer>\r\n      <Table size=\"small\">\r\n        <TableBody>\r\n          <TableRow>\r\n            <TableCell>{'Glyph:'}</TableCell>\r\n            <TableCell>\r\n              <Typography variant='h2'>{emoji.glyph}</Typography>\r\n            </TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell>{'Name:'}</TableCell>\r\n            <TableCell>{emoji.name}</TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell>{'Group:'}</TableCell>\r\n            <TableCell>{emoji.group}</TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell>{'Subgroup:'}</TableCell>\r\n            <TableCell>{emoji.subGroup}</TableCell>\r\n          </TableRow>\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n\r\nexport default EmojiPopoverTable;\r\n","import React from 'react';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport EmojiPopverTable from './EmojiPopoverTable';\r\n\r\nconst anchorOrigin = { vertical: 'bottom', horizontal: 'right' };\r\nconst transformOrigin = { vertical: 'top', horizontal: 'left' };\r\n\r\nfunction EmojiPopver({ onClose, anchorEl, emoji }) {\r\n  const open = Boolean(anchorEl && emoji);\r\n\r\n  return (\r\n    <Popover\r\n      open={open}\r\n      onClose={() => onClose?.()}\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={anchorOrigin}\r\n      transformOrigin={transformOrigin}\r\n    >\r\n      <EmojiPopverTable emoji={emoji} />\r\n    </Popover>\r\n  );\r\n}\r\n\r\nexport default EmojiPopver;\r\n","import React from 'react';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport EmojiPopover from './EmojiPopover';\r\n\r\nfunction EmojiGlyph({ emoji, selected, onClick }) {\r\n  const style = {\r\n    display: 'inline-block',\r\n    width: '32px',\r\n    cursor: 'pointer'\r\n  };\r\n\r\n  if (selected) {\r\n    style.background = 'CornflowerBlue';\r\n  }\r\n\r\n  return (\r\n    <span onClick={e => onClick?.(e)} style={style}>\r\n      {emoji.glyph}\r\n    </span>\r\n  );\r\n}\r\n\r\nfunction EmojiAccordion({ title, emojis, expanded, onChange, onEmojiClick }) {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [selectedEmoji, setEmoji] = React.useState(null);\r\n\r\n  return (\r\n    <Accordion expanded={expanded} onChange={onChange}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>\r\n          {title}\r\n        </Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Typography variant='h5'>\r\n          {emojis.map((emoji, i) => {\r\n            return (\r\n              <EmojiGlyph\r\n                key={i}\r\n                emoji={emoji}\r\n                selected={emoji === selectedEmoji}\r\n                onClick={e => {\r\n                  setAnchorEl(e.currentTarget);\r\n                  setEmoji(emoji);\r\n                  onEmojiClick?.(emoji)\r\n                }}\r\n              />\r\n            )\r\n          })}\r\n        </Typography>\r\n        <EmojiPopover\r\n          anchorEl={anchorEl}\r\n          emoji={selectedEmoji}\r\n          onClose={() => {\r\n            setAnchorEl(null);\r\n            setEmoji(null);\r\n          }}\r\n        />\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  )\r\n}\r\n\r\nexport default EmojiAccordion;\r\n","import React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport groupBy from 'lodash/groupBy';\r\nimport startCase from 'lodash/startCase';\r\nimport Header from './Header';\r\nimport Footer from './Footer';\r\nimport EmojiAccordion from './EmojiAccordion';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  accordionContainer: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(4)\r\n  },\r\n  header: {\r\n    marginBottom: theme.spacing(2)\r\n  },\r\n  footer: {\r\n    marginTop: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nfunction groupEmojis(emojis) {\r\n  const groups = groupBy(emojis, emoji => emoji.group);\r\n  return Object.entries(groups);\r\n}\r\n\r\nfunction titleCase(title) {\r\n  // HACK: .replace for 'and' correction...\r\n  return startCase(title).replace('And', 'and');\r\n}\r\n\r\nfunction App({ emojis }) {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n  const [emoji, setEmoji] = React.useState(null);\r\n\r\n  const emojiGroups = groupEmojis(emojis);\r\n\r\n  const handleAccordionChange = (index) => {\r\n    setExpanded(expanded !== index ? index : false);\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"md\">\r\n      <Grid container spacing={2}>\r\n        <div className={classes.accordionContainer}>\r\n          <div className={classes.header}>\r\n            <Header emojiGlyph={emoji?.glyph}/>\r\n          </div>\r\n          {emojiGroups.map(([name, emojis], index) => {\r\n            return (\r\n              <EmojiAccordion\r\n                key={index}\r\n                title={titleCase(name)}\r\n                emojis={emojis}\r\n                expanded={expanded === index}\r\n                onChange={() => handleAccordionChange(index)}\r\n                onEmojiClick={emoji => setEmoji(emoji)}\r\n              />\r\n            )\r\n          })}\r\n        </div>\r\n        <div className={classes.footer}>\r\n          <Footer/>\r\n        </div>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport emojis from './emojis';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App emojis={emojis}/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}